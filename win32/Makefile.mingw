# Hard coded Makefile for windows

CC = gcc

LOCAL=/usr/local
LOCALLIB=-L${LOCAL}/lib
LOCALINC=-I${LOCAL}/include -I${LOCAL}/include/event2

MARCH=-march=i686
TMP_DIR=./tmp
INSTALLDIRS=$(LOCAL)/bin $(LOCAL)/lib $(LOCAL)/lib/memcached

TCMALLOC_FLAGS = -Wwrite-strings \
                    -Wno-sign-compare -DNO_FRAME_POINTER \
                    -DHAVE_LIBTCMALLOC_MINIMAL \
                    -fno-builtin-malloc -fno-builtin-free -fno-builtin-realloc \
                    -fno-builtin-calloc -fno-builtin-cfree \
                    -fno-builtin-memalign -fno-builtin-posix_memalign \
                    -fno-builtin-valloc -fno-builtin-pvalloc

PLATFORM=../cmake/platform
MEMCACHED=${LOCAL}
GEN_CONFIG = src/generated_configuration.h src/generated_configuration.cc
GEN_CODE = src/stats-info.h src/stats-info.c

OBJDIR = .libs \
         .libs/src \
         .libs/poll \
         .libs/management \
         .libs/src/couch-kvstore \
         .libs/src/iomanager \
         .libs/tools

BINARIES= ${GEN_CONFIG} ${GEN_CODE} .libs/ep.so
LIB=$(LOCALLIB) -L${MEMCACHED}/lib
INCLUDE= -Iwin32 -Isrc -Iinclude -I.libs -I${PLATFORM}/include -I${MEMCACHED}/include -I${MEMCACHED}/win32 -I. $(LOCALINC)
GENFILES=.libs/config_version.h
CPPFLAGS= $(MARCH) -O2 -DHAVE_CONFIG_H ${INCLUDE} -Wall -DHAVE_LIBCOUCHSTORE

all: ${BINARIES}

install: ${BINARIES} $(INSTALLDIRS)
	cp .libs/ep.so $(LOCAL)/lib/memcached
	rm -rf $(TMP_DIR) && mkdir -p $(TMP_DIR)
	cp ./management/* $(TMP_DIR)
	rm -f $(TMP_DIR)/*.pyc && rm -f $(TMP_DIR)/*.cc && rm -f $(TMP_DIR)/*.o
	cp $(TMP_DIR)/* $(LOCAL)/bin
	rm -rf .libs/tools


CFLAGS = -std=gnu99 -DNDEBUG -g \
           -fno-strict-aliasing -Wstrict-prototypes -Wmissing-prototypes \
           -Wmissing-declarations -Wredundant-decls \
           $(TCMALLOC_FLAGS) \
           -DGLIBCXX_FORCE_NEW

CXXFLAGS = -std=gnu++0x -g \
           -fdiagnostics-show-option \
           -Wformat=2  \
           -Woverloaded-virtual -Wnon-virtual-dtor -Wctor-dtor-privacy \
           -Wno-long-long  -Wmissing-declarations -Wno-redundant-decls \
           $(TCMALLOC_FLAGS) \
           -DGLIBCXX_FORCE_NEW

EP_ENGINE_CC_SRC = \
                 src/access_scanner.cc \
                 src/atomic.cc \
                 src/backfill.cc \
                 src/bgfetcher.cc \
                 src/checkpoint.cc \
                 src/checkpoint_remover.cc \
                 src/configuration.cc \
                 src/conflict_resolution.cc \
                 src/couch-kvstore/couch-kvstore.cc \
                 src/couch-kvstore/couch-fs-stats.cc \
                 src/couch-kvstore/couch-notifier.cc \
                 src/couch-kvstore/dirutils.cc \
                 src/dispatcher.cc \
                 src/ep.cc \
                 src/ep_engine.cc \
                 src/flusher.cc \
                 src/htresizer.cc \
                 src/iomanager/iomanager.cc \
                 src/item.cc \
                 src/item_pager.cc \
                 src/kvshard.cc \
                 src/kvstore.cc \
                 src/memory_tracker.cc \
                 src/mutation_log.cc \
                 src/mutex.cc \
                 src/objectregistry.cc \
                 src/priority.cc \
                 src/queueditem.cc \
                 src/scheduler.cc \
                 src/sizes.cc \
                 src/stored-value.cc \
                 src/tapconnection.cc \
                 src/tapconnmap.cc \
                 src/tapthrottle.cc \
                 src/tasks.cc \
                 src/vbucket.cc \
                 src/vbucketmap.cc \
                 src/warmup.cc \
                 src/workload.cc

EP_ENGINE_C_SRC = \
                 src/crc32.c \
                 src/stats-info.c \
                 src/ep_time.c \
                 tools/JSON_checker.c \

EP_ENGINE_OBJS = ${EP_ENGINE_C_SRC:%.c=.libs/%.o} ${EP_ENGINE_CC_SRC:%.cc=.libs/%.o}

.libs/ep.so: ${OBJDIR} ${GENFILES} $(EP_ENGINE_OBJS)
	${LINK.cc} -o $@ -shared ${EP_ENGINE_OBJS} -L${MEMCACHED}/lib -L${MEMCACHED}/bin -lmcd_util \
                  ${LIB} -lcouchstore -lpthread  -lsnappy -levent\
                  -lws2_32 -lcJSON -lplatform
${GEN_CONFIG}: configuration.json
	${LOCAL}/bin/genconfig.exe

${GEN_CODE}: docs\stats.json
	${LOCAL}/bin/gencode.exe -j docs/stats.json -h src/stats-info.h -c src/stats-info.c -f get_stats_info

LIBCOUCH_KVSTORE_CC_SRC = \
        src/kvstore.cc \
        src/couch-kvstore/dirutils.cc \
        src/couch-kvstore/couch-kvstore.cc

LIBCOUCH_KVSTORE_OBJS = ${LIBCOUCH_KVSTORE_CC_SRC:%.cc=.libs/%.o}

.libs/config_version.h:
	./win32/config.sh

${OBJDIR} ${INSTALLDIRS}:; -@mkdir $@

.libs/%.o: %.cc
	${COMPILE.cc} -MMD $< -o $@

.libs/%.o: %.c
	${COMPILE.c} -MMD $< -o $@

clean:
	$(RM) ${EP_ENGINE_OBJS} ${BINARIES} ${EP_ENGINE_OBJS:.o=.d} \
	${LIBCOUCH_KVSTORE_OBJS:.o=.d} \
              ${GENFILES}

-include ${EP_ENGINE_OBJS:.o=.d}
